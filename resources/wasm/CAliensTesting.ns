Newspeak3
'Aliens'
class CAliensTesting usingPlatform: p aliens: a minitest: m = (|
	private TestContext = m TestContext.
	private Alien = a Alien.
|) (
public class AccessingTests = TestContext () (
public testAllocFree = (
	| direct indirect pointer |
	direct:: Alien new: 4.
	should: [direct free] signal: Error.

	indirect:: Alien newC: 4.
	indirect free.
	should: [indirect free] signal: Error. (* double free *)

	pointer:: Alien forPointer: 0.
	should: [direct free] signal: Error.
	pointer:: Alien forPointer: 16r7FFFFF.
	should: [direct free] signal: Error.
)
public testGetInt16 = (
	| a |
	a:: Alien new: 8.
	1 to: 8 do: [:i | a unsignedByteAt: i put: i].

	should: [a signedShortAt: -1] signal: Error.
	should: [a signedShortAt: 0] signal: Error.
	should: [a signedShortAt: 0] signal: Error.
	assert: (a signedShortAt: 1) equals: 16r0201.
	assert: (a signedShortAt: 2) equals: 16r0302.
	assert: (a signedShortAt: 3) equals: 16r0403.
	assert: (a signedShortAt: 4) equals: 16r0504.
	assert: (a signedShortAt: 5) equals: 16r0605.
	assert: (a signedShortAt: 6) equals: 16r0706.
	assert: (a signedShortAt: 7) equals: 16r0807.
	should: [a signedShortAt: 8] signal: Error.

	1 to: 8 do: [:i | a unsignedByteAt: i put: 256 - i].

	should: [a signedShortAt: -1] signal: Error.
	should: [a signedShortAt: 0] signal: Error.
	assert: (a signedShortAt: 1) equals: 16rFEFF - 16r10000.
	assert: (a signedShortAt: 2) equals: 16rFDFE - 16r10000.
	assert: (a signedShortAt: 3) equals: 16rFCFD - 16r10000.
	assert: (a signedShortAt: 4) equals: 16rFBFC - 16r10000.
	assert: (a signedShortAt: 5) equals: 16rFAFB - 16r10000.
	assert: (a signedShortAt: 6) equals: 16rF9FA - 16r10000.
	assert: (a signedShortAt: 7) equals: 16rF8F9 - 16r10000.
	should: [a signedShortAt: 8] signal: Error.
)
public testGetInt32 = (
	| a |
	a:: Alien new: 8.
	1 to: 8 do: [:i | a unsignedByteAt: i put: i].

	should: [a signedLongAt: -1] signal: Error.
	should: [a signedLongAt: 0] signal: Error.
	assert: (a signedLongAt: 1) equals: 16r04030201.
	assert: (a signedLongAt: 2) equals: 16r05040302.
	assert: (a signedLongAt: 3) equals: 16r06050403.
	assert: (a signedLongAt: 4) equals: 16r07060504.
	assert: (a signedLongAt: 5) equals: 16r08070605.
	should: [a signedLongAt: 6] signal: Error.
	should: [a signedLongAt: 7] signal: Error.
	should: [a signedLongAt: 8] signal: Error.
	should: [a signedLongAt: 9] signal: Error.

	1 to: 8 do: [:i | a unsignedByteAt: i put: 256-i].

	should: [a signedLongAt: -1] signal: Error.
	should: [a signedLongAt: 0] signal: Error.
	assert: (a signedLongAt: 1) equals: 16rFCFDFEFF - 16r100000000.
	assert: (a signedLongAt: 2) equals: 16rFBFCFDFE - 16r100000000.
	assert: (a signedLongAt: 3) equals: 16rFAFBFCFD - 16r100000000.
	assert: (a signedLongAt: 4) equals: 16rF9FAFBFC - 16r100000000.
	assert: (a signedLongAt: 5) equals: 16rF8F9FAFB - 16r100000000.
	should: [a signedLongAt: 6] signal: Error.
	should: [a signedLongAt: 7] signal: Error.
	should: [a signedLongAt: 8] signal: Error.
	should: [a signedLongAt: 9] signal: Error.
)
public testGetInt64 = (
	| a |
	a:: Alien new: 16.
	1 to: 16 do: [:i | a unsignedByteAt: i put: i].

	should: [a signedLongLongAt: -1] signal: Error.
	should: [a signedLongLongAt: 0] signal: Error.
	assert: (a signedLongLongAt: 1) equals: 16r0807060504030201.
	assert: (a signedLongLongAt: 2) equals: 16r0908070605040302.
	assert: (a signedLongLongAt: 3) equals: 16r0A09080706050403.
	assert: (a signedLongLongAt: 4) equals: 16r0B0A090807060504.
	assert: (a signedLongLongAt: 5) equals: 16r0C0B0A0908070605.
	assert: (a signedLongLongAt: 6) equals: 16r0D0C0B0A09080706.
	assert: (a signedLongLongAt: 7) equals: 16r0E0D0C0B0A090807.
	assert: (a signedLongLongAt: 8) equals: 16r0F0E0D0C0B0A0908.
	assert: (a signedLongLongAt: 9) equals: 16r100F0E0D0C0B0A09.
	should: [a signedLongLongAt: 10] signal: Error.
	should: [a signedLongLongAt: 11] signal: Error.
	should: [a signedLongLongAt: 12] signal: Error.
	should: [a signedLongLongAt: 13] signal: Error.
	should: [a signedLongLongAt: 14] signal: Error.
	should: [a signedLongLongAt: 15] signal: Error.
	should: [a signedLongLongAt: 16] signal: Error.
	should: [a signedLongLongAt: 17] signal: Error.

	1 to: 16 do: [:i | a unsignedByteAt: i put: 256 - i].

	should: [a signedLongLongAt: -1] signal: Error.
	should: [a signedLongLongAt: 0] signal: Error.
	assert: (a signedLongLongAt: 1) equals: 16rF8F9FAFBFCFDFEFF - 16r10000000000000000.
	assert: (a signedLongLongAt: 2) equals: 16rF7F8F9FAFBFCFDFE - 16r10000000000000000.
	assert: (a signedLongLongAt: 3) equals: 16rF6F7F8F9FAFBFCFD - 16r10000000000000000.
	assert: (a signedLongLongAt: 4) equals: 16rF5F6F7F8F9FAFBFC - 16r10000000000000000.
	assert: (a signedLongLongAt: 5) equals: 16rF4F5F6F7F8F9FAFB - 16r10000000000000000.
	assert: (a signedLongLongAt: 6) equals: 16rF3F4F5F6F7F8F9FA - 16r10000000000000000.
	assert: (a signedLongLongAt: 7) equals: 16rF2F3F4F5F6F7F8F9 - 16r10000000000000000.
	assert: (a signedLongLongAt: 8) equals: 16rF1F2F3F4F5F6F7F8 - 16r10000000000000000.
	assert: (a signedLongLongAt: 9) equals: 16rF0F1F2F3F4F5F6F7 - 16r10000000000000000.
	should: [a signedLongLongAt: 10] signal: Error.
	should: [a signedLongLongAt: 11] signal: Error.
	should: [a signedLongLongAt: 12] signal: Error.
	should: [a signedLongLongAt: 13] signal: Error.
	should: [a signedLongLongAt: 14] signal: Error.
	should: [a signedLongLongAt: 15] signal: Error.
	should: [a signedLongLongAt: 16] signal: Error.
	should: [a signedLongLongAt: 17] signal: Error.
)
public testGetInt8 = (
	| a |
	a:: Alien new: 8.
	1 to: 8 do: [:i | a unsignedByteAt: i put: i].

	should: [a signedByteAt: -1] signal: Error.
	should: [a signedByteAt: 0] signal: Error.
	assert: (a signedByteAt: 1) equals: 1.
	assert: (a signedByteAt: 2) equals: 2.
	assert: (a signedByteAt: 3) equals: 3.
	assert: (a signedByteAt: 4) equals: 4.
	assert: (a signedByteAt: 5) equals: 5.
	assert: (a signedByteAt: 6) equals: 6.
	assert: (a signedByteAt: 7) equals: 7.
	assert: (a signedByteAt: 8) equals: 8.
	should: [a signedByteAt: 9] signal: Error.

	1 to: 8 do: [:i | a unsignedByteAt: i put: 256-i].
	should: [a signedByteAt: -1] signal: Error.
	should: [a signedByteAt: 0] signal: Error.
	assert: (a signedByteAt: 1) equals: 16rFF - 16r100.
	assert: (a signedByteAt: 2) equals: 16rFE - 16r100.
	assert: (a signedByteAt: 3) equals: 16rFD - 16r100.
	assert: (a signedByteAt: 4) equals: 16rFC - 16r100.
	assert: (a signedByteAt: 5) equals: 16rFB - 16r100.
	assert: (a signedByteAt: 6) equals: 16rFA - 16r100.
	assert: (a signedByteAt: 7) equals: 16rF9 - 16r100.
	assert: (a signedByteAt: 8) equals: 16rF8 - 16r100.
	should: [a signedByteAt: 9] signal: Error.
)
public testGetUint16 = (
	| a |
	a:: Alien new: 8.
	1 to: 8 do: [:i | a unsignedByteAt: i put: i].

	should: [a unsignedShortAt: -1] signal: Error.
	should: [a unsignedShortAt: 0] signal: Error.
	assert: (a unsignedShortAt: 1) equals: 16r0201.
	assert: (a unsignedShortAt: 2) equals: 16r0302.
	assert: (a unsignedShortAt: 3) equals: 16r0403.
	assert: (a unsignedShortAt: 4) equals: 16r0504.
	assert: (a unsignedShortAt: 5) equals: 16r0605.
	assert: (a unsignedShortAt: 6) equals: 16r0706.
	assert: (a unsignedShortAt: 7) equals: 16r0807.
	should: [a unsignedShortAt: 8] signal: Error.
)
public testGetUint32 = (
	| a |
	a:: Alien new: 8.
	1 to: 8 do: [:i | a unsignedByteAt: i put: i].

	should: [a unsignedLongAt: -1] signal: Error.
	should: [a unsignedLongAt: 0] signal: Error.
	assert: (a unsignedLongAt: 1) equals: 16r04030201.
	assert: (a unsignedLongAt: 2) equals: 16r05040302.
	assert: (a unsignedLongAt: 3) equals: 16r06050403.
	assert: (a unsignedLongAt: 4) equals: 16r07060504.
	assert: (a unsignedLongAt: 5) equals: 16r08070605.
	should: [a unsignedLongAt: 6] signal: Error.
	should: [a unsignedLongAt: 7] signal: Error.
	should: [a unsignedLongAt: 8] signal: Error.
)
public testGetUint64 = (
	| a |
	a:: Alien new: 16.
	1 to: 16 do: [:i | a unsignedByteAt: i put: i].

	should: [a unsignedLongLongAt: -1] signal: Error.
	should: [a unsignedLongLongAt: 0] signal: Error.
	assert: (a unsignedLongLongAt: 1) equals: 16r0807060504030201.
	assert: (a unsignedLongLongAt: 2) equals: 16r0908070605040302.
	assert: (a unsignedLongLongAt: 3) equals: 16r0A09080706050403.
	assert: (a unsignedLongLongAt: 4) equals: 16r0B0A090807060504.
	assert: (a unsignedLongLongAt: 5) equals: 16r0C0B0A0908070605.
	assert: (a unsignedLongLongAt: 6) equals: 16r0D0C0B0A09080706.
	assert: (a unsignedLongLongAt: 7) equals: 16r0E0D0C0B0A090807.
	assert: (a unsignedLongLongAt: 8) equals: 16r0F0E0D0C0B0A0908.
	assert: (a unsignedLongLongAt: 9) equals: 16r100F0E0D0C0B0A09.
	should: [a unsignedLongLongAt: 10] signal: Error.
	should: [a unsignedLongLongAt: 11] signal: Error.
	should: [a unsignedLongLongAt: 12] signal: Error.
	should: [a unsignedLongLongAt: 13] signal: Error.
	should: [a unsignedLongLongAt: 14] signal: Error.
	should: [a unsignedLongLongAt: 15] signal: Error.
	should: [a unsignedLongLongAt: 16] signal: Error.
	should: [a unsignedLongLongAt: 17] signal: Error.
)
public testGetUint8 = (
	| a |
	a:: Alien new: 8.
	1 to: 8 do: [:i | a unsignedByteAt: i put: i].

	should: [a unsignedByteAt: -1] signal: Error.
	should: [a unsignedByteAt: 0] signal: Error.
	assert: (a unsignedByteAt: 1) equals: 1.
	assert: (a unsignedByteAt: 2) equals: 2.
	assert: (a unsignedByteAt: 3) equals: 3.
	assert: (a unsignedByteAt: 4) equals: 4.
	assert: (a unsignedByteAt: 5) equals: 5.
	assert: (a unsignedByteAt: 6) equals: 6.
	assert: (a unsignedByteAt: 7) equals: 7.
	assert: (a unsignedByteAt: 8) equals: 8.
	should: [a unsignedByteAt: 9] signal: Error.
)
) : (
TEST_CONTEXT = ()
)
) : (
)
