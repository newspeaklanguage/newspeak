Newspeak3
'Root'
class HopscotchWebIDE packageUsing: manifest = (
	(* The Newspeak IDE in the web browser. *)
	|
	private hopscotchRuntime = manifest HopscotchForHTML5Runtime packageUsing: manifest.
	private Browsing = manifest SimpleBrowsing.
	private CombinatorialParsing = manifest CombinatorialParsing.
	private Debugging = manifest Debugging2.
	private DeploymentManager = manifest DeploymentManager.	
	private Minitest = manifest Minitest.
	private MinitestUI2 = manifest MinitestUI2.
	private Namespacing = manifest NamespacingForV8.
	private NewspeakColorization = manifest NewspeakColorization2.
	private NewspeakGrammar = manifest NewspeakGrammar.
	private NewspeakASTs = manifest NewspeakASTs.	
	private NewspeakParsing = manifest NewspeakParsing.
	private WorkspaceManager = manifest WorkspaceManagerForV8.
	private RuntimeForPrimordialSoup = manifest RuntimeForPrimordialSoup.
	private RuntimeWithMirrorsForPrimordialSoup = manifest RuntimeWithMirrorsForPrimordialSoup.
	(* V8 stuff *)
	private NewspeakCompilation = manifest NewspeakCompilation. 
        private JavascriptGeneration = manifest JavascriptGeneration.
	private Newspeak2V8Compilation = manifest Newspeak2V8Compilation.
	private ActorsForV8 = manifest ActorsForV8.
	private AliensForV8 = manifest AliensForV8.	
	private MirrorsForV8 = manifest MirrorsForV8.
	private MirrorGroups = manifest MirrorGroups.	
	private KernelForV8 = manifest KernelForV8.
	private Collections = manifest Collections.
	private Streams = manifest Streams.

	private RuntimeForV8 = manifest RuntimeForV8.
	private RuntimeForV8WithMirrorBuilders = manifest RuntimeForV8WithMirrorBuilders.		
	private testModules = {
		manifest AccessModifierTesting.
		manifest AccessModifierTestingConfiguration.
		manifest KernelTests.
		manifest KernelTestsConfiguration.
		manifest MinitestTests.
		manifest MinitestTestsConfiguration.
		manifest MirrorTesting.
		manifest MirrorTestingConfiguration.
		manifest MirrorTestingModel.
		manifest MirrorBuilderTesting.
		manifest MirrorBuilderTestingConfiguration.
		manifest ActivationMirrorTesting.
		manifest ActivationMirrorTestingConfiguration.
		manifest JSTesting.
		manifest JSTestingConfiguration.
	}.
	
	private imagesOuter = HopscotchImages packageUsing: manifest. (* Should be `images` but there appears to be an outer send bug in NS2V8. *)
	|
	(* manifest codemirror.*)
) (
class HopscotchImages packageUsing: manifest = (
	|
    public accept16px = manifest accept16px.
	public addImage = manifest hsAddImage.
	public addOutImage = manifest hsAddOutImage.
	public addOverImage = manifest hsAddOverImage.
    public backImage = manifest hsBackImage.
  	public backDownImage = manifest hsBackDownImage.
 	public backOutImage = manifest hsBackOutImage.
   	public backOverImage = manifest hsBackOverImage.
    public cancel16px = manifest cancel16px.
	public classIcon = manifest languageNewspeak3.
	public classPresenterIcon = manifest classPresenterImage.
	public classUnknownIcon = manifest classUnknownImage.
	public collapseImage = manifest hsCollapseImage.
	public collapseDownImage = manifest hsCollapseDownImage.
	public collapseOverImage = manifest hsCollapseOverImage.
    public disclosureClosedImage = manifest disclosureClosedImage.
    public disclosureOpenImage = manifest disclosureOpenImage.
    public disclosureTransitionImage = manifest disclosureTransitionImage.
	public dropDownImage = manifest hsDropdownImage.
	public dropDownOutImage = manifest hsDropdownOutImage.
	public dropDownOverImage = manifest hsDropdownOverImage.
	public expandImage = manifest hsExpandImage.
	public expandDownImage = manifest hsExpandDownImage.
	public expandOverImage = manifest hsExpandOverImage.
    public findSquareLeftImage = manifest findSquareLeftImage.
    public findSquareLeftOverImage = manifest findSquareLeftOverImage.
    public findSquareLeftDownImage = manifest findSquareLeftDownImage.
	public forwardImage = manifest hsForwardImage.
    	public forwardDownImage = manifest hsForwardDownImage.    
    	public forwardOutImage = manifest hsForwardOutImage.
    	public forwardOverImage = manifest hsForwardOverImage.
    	public historyImage = manifest hsHistoryImage.
   	public historyDownImage = manifest hsHistoryDownImage.
    	public historyOverImage = manifest hsHistoryOverImage.
    	public homeImage = manifest hsHomeImage.
   	public homeDownImage = manifest hsHomeDownImage.
    	public homeOverImage = manifest hsHomeOverImage.
    	public homeOutImage = manifest hsHomeOutImage.
    	public itemReferencesImage = manifest itemReferencesImage.
    	public newImage = manifest hsNewImage.
    	public newDownImage = manifest hsNewDownImage.
   	public newOverImage = manifest hsNewOverImage.
    	public privateAccessImage = manifest privateImage.
    	public protectedAccessImage = manifest protectedImage.
    	public publicAccessImage = manifest publicImage.
    	public refreshImage = manifest hsRefreshImage.
    	public refreshDownImage = manifest hsRefreshDownImage.
    	public refreshOverImage = manifest hsRefreshOverImage.
    	public refreshOutImage = manifest hsRefreshOutImage.
|) (
) : (
)
class HopscotchWebIDE usingPlatform: p = (
	|
	public images = imagesOuter.
	public browsing = Browsing usingPlatform: p ide: self.
	public debugging = Debugging usingPlatform: p ide: self.
	public namespacing = Namespacing usingPlatform: p.
	public theWorkspaceManager = WorkspaceManager usingPlatform: p ide: self.
	public minitest = Minitest usingPlatform: p.
	public minitestUI = MinitestUI2 usingPlatform: p minitest: minitest ide: self.
	public parserLib = CombinatorialParsing usingPlatform: p.
	public grammar = NewspeakGrammar usingPlatform: p parsers: parserLib.
	public colorizer = (NewspeakColorization usingPlatform: p grammar: grammar) NS3BrowserColorizer new.
	public deployment
	public psoupDeploymentRuntime = RuntimeForPrimordialSoup.
	public psoupWithMirrorsDeploymentRuntime = RuntimeWithMirrorsForPrimordialSoup.
	|
	populateNamespaceUsingPlatform: p.
	deployment:: DeploymentManager usingPlatform: p ide: self.
) (
populateIconNamespace: ns <Namespace> ^ <Namespace> = (
	^ns
    	at:  'accept16px' put:  images accept16px;
	    at:  'cancel16px' put: images cancel16px;
	    at:  'disclosureClosedImage' put: images disclosureClosedImage;
	    at:  'disclosureTransitionImage' put: images disclosureTransitionImage;
	    at:  'disclosureOpenImage' put: images disclosureOpenImage;
		at: 'publicImage' put: images publicAccessImage;
		at: 'protectedImage' put: images protectedAccessImage;
		at: 'privateImage' put: images privateAccessImage;
		at: 'hsAddImage' put: images addImage;
		at: 'hsAddOutImage' put: images addOutImage;
		at: 'hsAddOverImage' put: images addOverImage;
		at: 'hsBackImage' put: images backImage;
		at: 'hsBackDownImage' put: images backDownImage;		
		at: 'hsBackOutImage' put: images backOutImage;
		at: 'hsBackOverImage' put: images backOverImage;		
		at: 'hsDropdownImage' put: images dropDownImage;
		at: 'hsDropdownOutImage' put: images dropDownOutImage;
		at: 'hsDropdownOverImage' put: images dropDownOverImage;
		at: 'hsExpandImage' put: images expandImage;
		at: 'hsExpandOverImage' put: images expandOverImage;
		at: 'hsExpandDownImage' put: images expandDownImage;
		at: 'hsCollapseImage' put: images collapseImage;
		at: 'hsCollapseOverImage' put: images collapseOverImage;
		at: 'hsCollapseDownImage' put: images collapseDownImage;
		at: 'classPresenterImage' put: images classPresenterIcon;
		at: 'classUnknownImage' put: images classUnknownIcon;
		at: 'hsForwardImage' put: images forwardImage;
		at: 'hsForwardDownImage' put: images forwardDownImage;		
		at: 'hsForwardOutImage' put: images forwardOutImage;
		at: 'hsForwardOverImage' put: images forwardOverImage;		
		at: 'languageNewspeak3' put: images classIcon;
		at: 'itemReferencesImage' put: images itemReferencesImage;
		at: 'hsHistoryImage' put: images historyImage;		
		at: 'hsHistoryDownImage' put: images historyDownImage;		
		at: 'hsHistoryOverImage' put: images historyOverImage;		
		at: 'hsHomeImage' put: images homeImage;
		at: 'hsHomeDownImage' put: images homeDownImage;		
		at: 'hsHomeOverImage' put: images homeOverImage;
		at: 'hsHomeOutImage' put: images homeOutImage;
		at: 'hsNewImage' put: images newImage;		
		at: 'hsNewDownImage' put: images newDownImage;		
		at: 'hsNewOverImage' put: images newOverImage;		
		at: 'hsRefreshImage' put: images refreshImage;
		at: 'hsRefreshDownImage' put: images refreshDownImage;		
		at: 'hsRefreshOverImage' put: images refreshOverImage;
		at: 'hsRefreshOutImage' put: images refreshOutImage;
        at: 'findSquareLeftImage' put: images findSquareLeftImage;
        at: 'findSquareLeftDownImage' put: images findSquareLeftDownImage;
        at: 'findSquareLeftOverImage' put: images findSquareLeftOverImage;
		yourself
)
populateNamespaceUsingPlatform: p <Platform> ^ <Namespace> = (
	|
	platformMirror <ObjectMirror> = p mirrors ObjectMirror reflecting: p.
	platformClass <ClassMirror> = platformMirror getClass.
	runtimeMirror<ObjectMirror> = platformClass enclosingObject.
	runtimeClass <ClassMirror> = topLevelClassOf: platformMirror.
	namespace <Namespace> = namespacing Root.
	|
	namespace
		at: 'Icons' put: (populateIconNamespace: namespacing freshNamespace);
		at: runtimeClass mixin name put: runtimeClass reflectee;
		at: 'SimpleBrowsing' put: Browsing;
		at: 'Minitest' put: Minitest;
		at: 'MinitestUI2' put: MinitestUI2;
		at: 'NamespacingForV8' put: Namespacing;
		at: 'NewspeakColorization2' put: NewspeakColorization;
		at: 'HopscotchWebIDE' put: (topLevelClassOf: (p mirrors ObjectMirror reflecting: self)) reflectee;
		at: 'CombinatorialParsing' put: CombinatorialParsing;
		at: 'NewspeakGrammar' put: NewspeakGrammar;
		at: 'NewspeakASTs' put: NewspeakASTs;
		at: 'NewspeakParsing' put: NewspeakParsing;
		at: 'Debugging2' put: Debugging;
		at: 'WorkspaceManagerForV8' put: WorkspaceManager;
		at: 'DeploymentManager' put: DeploymentManager;		
		at: 'RuntimeForPrimordialSoup' put: RuntimeForPrimordialSoup;
		at: 'RuntimeWithMirrorsForPrimordialSoup' put: RuntimeWithMirrorsForPrimordialSoup;
		at: 'RuntimeForV8' put: RuntimeForV8;
		at: 'RuntimeForV8WithMirrorBuilders' put: RuntimeForV8WithMirrorBuilders;
		at: 'NewspeakCompilation' put: NewspeakCompilation;
        at: 'JavascriptGeneration' put: JavascriptGeneration;
        at: 'Newspeak2V8Compilation' put: Newspeak2V8Compilation;
        at: 'KernelForV8' put: KernelForV8;
        at: 'ActorsForV8' put: ActorsForV8;	
        at: 'AliensForV8' put: AliensForV8;
        at: 'MirrorsForV8' put: MirrorsForV8;
        at: 'MirrorGroups' put: MirrorGroups;	
        at: 'Collections' put: Collections;
        at: 'Streams' put: Streams.
		
	testModules do: [:testModule | namespace at: testModule name put: testModule].

	augmentIDE: self withPlatform: p.

	^namespace
)
public launch: s <Subject> inWindow: w <HopscotchShell class> = (
  browsing launch: s inWindow: w
)
public launch: s <Subject> = (
  browsing launch: s inWindow: browsing IDEWindow
)
) : (
)
public augmentIDE: ide withPlatform: p = (
	|
	platformMirror <ObjectMirror> = p mirrors ObjectMirror reflecting: p.
	platformClass <ClassMirror> = platformMirror getClass.
	runtimeMirror<ObjectMirror> = platformClass enclosingObject.
	runtimeClass <ClassMirror> = topLevelClassOf: platformMirror.
	namespace <Namespace> = ide namespacing Root.
	|

	runtimeClass slots do:
		[:s <SlotMirror> | | klass <ClassMIrror> o <Object> |
		o:: (runtimeMirror getSlot: s name) reflectee.
		o isKindOfBehavior ifTrue:
			[namespace at: o name put: o]].
)
public ideUsingPlatform: p = (
	^HopscotchWebIDE usingPlatform: p
)
topLevelClassOf: om <ObjectMirror> ^ <ClassMirror> = (
	| klass <ClassMirror> ::= om getClass. |
	[klass enclosingObject reflectee isNil] whileFalse: [klass:: klass enclosingObject getClass].
	^klass
)
public main: platform <Platform> args: args <Tuple[String]> = (
	| hopscotchPlatform ide |
	hopscotchPlatform:: hopscotchRuntime using: platform.
	ide:: ideUsingPlatform: hopscotchPlatform.
    augmentIDE: ide withPlatform: platform.
    ide launch: (ide browsing HomeSubject new)
)
) : (
)
