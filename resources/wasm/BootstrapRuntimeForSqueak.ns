Newspeak3
'NS2Squeak'
class BootstrapRuntimeForSqueak packageUsing: manifest = (
(* Bundles enough module definitions to create a subset of the platform object that can compile NS3.

Copyright (c) 2010-2012 Ryan Macnak.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ''Software''), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ''AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. *)
|
	Collections = manifest Collections.
	Ducts = manifest Ducts.
	Kernel = manifest KernelForSqueak.
	Mirrors = manifest MirrorsForSqueak.
		public Intermediates = manifest IntermediatesForSqueak.
		public AtomicInstaller = manifest AtomicInstaller.
		public MirrorGroups = manifest MirrorGroups.
	Streams = manifest Streams.

	public CombinatorialParsing = manifest CombinatorialParsing.
	public NewspeakGrammar = manifest NewspeakGrammar.
	public NewspeakASTs = manifest NewspeakASTs.
	public NewspeakParsing = manifest NewspeakParsing.
	public Newspeak2SqueakCompilation = manifest Newspeak2SqueakCompilation mixinApply: manifest NewspeakCompilation.
|) (
class Platform usingVmMirror: vmm = (
(* Just enought to get the NS3 compiler going *)
||
	public namespace = outer BootstrapRuntimeForSqueak.

	public collections = Collections usingPlatform: self.
	public ducts = Ducts usingPlatform: self.
	public kernel = Kernel usingPlatform: self vmMirror: vmm.
	public mirrors = Mirrors usingPlatform: self vmMirror: vmm.
	public streams = Streams usingPlatform: self.
	public squeak = Squeak wrapping: vmm Smalltalk.
||self resetForNewImageSession) (
class Squeak wrapping: globals = (
(* The platform-specific namespace for Squeak. *)
| Smalltalk = globals. |) (
protected doesNotUnderstand: message = (
	^Smalltalk at: message selector ifAbsent: [super doesNotUnderstand: message]
)
) : (
)
public resetForNewImageSession = (
)
) : (
)
public using: vmm <VMMirror> ^<Platform> = (
	^Platform usingVmMirror: vmm
)
) : (
)
