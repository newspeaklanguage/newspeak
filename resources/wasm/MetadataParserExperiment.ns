Newspeak3
'Root'
class MetadataParserExperiment usingPlatform: platform on: s <String> at: p <Integer> = (
	|
    List = platform collections List.
    Map = platform collections Map.
    
    input <String> = s.
    position <Integer> ::= p.
	metadata <Map[String, String]> = Map new.
    comments <List[String]> = List new.
	|
) (
skipWhitespace = (
	[position > 0
			ifFalse: [false]
			ifTrue: [(input at: position) <= 32]
    ] whileTrue: [position:: position + 1].
)
skipWhitespaceBackwards = (
	[position > 0
			ifFalse: [false]
			ifTrue: [(input at: position) <= 32]
    ] whileTrue: [position:: position - 1].
)
noteMetadataComment: mc <String> = (
  | tagData = getTagDataFrom: mc. tag = tagData first. pos = tagData at: 2. |
  tag isEmpty 
    ifTrue: [comments add: mc] 
    ifFalse: [metadata at: tag put: (mc copyFrom: pos to: mc size)].
)
getTagDataFrom: mc <String> ^ <{String. Integer}> = (
  | pos ::= 1. tagStart  tagEnd |
  
 	[pos < mc size
			ifFalse: [false]
			ifTrue: [(mc at: pos) <= 32]
    ] whileTrue: [pos:: pos + 1].
    (mc at: pos) = 58 ifFalse: [^{''. 0}].
    tagStart:: pos.
    
   #BOGUS yourself. (* should check that there's an id between the colons *)

  tagEnd:: mc indexOf: ':' startingAt: tagStart + 1.
  tagEnd = 0 ifTrue: [^{''. 0}].
 ^{mc copyFrom: tagStart to: tagEnd. tagEnd + 1}
)
public gatherMetadataBackwards  = (
	| outerLoopPosition ::= 0. metadataComment <String> |
	[outerLoopPosition = position] whileFalse:
		[outerLoopPosition:: position.
		 skipWhitespaceBackwards.
         metadataComment:: gatherCommentBackwards.
		 metadataComment isEmpty ifFalse: [noteMetadataComment: metadataComment].
         ].
)
public gatherMetadata  = (
	| outerLoopPosition ::= 0. metadataComment <String> |
	[outerLoopPosition = position] whileFalse:
		[outerLoopPosition:: position.
		 skipWhitespace.
         metadataComment:: gatherComment.
		 metadataComment isEmpty ifFalse: [noteMetadataComment: metadataComment].
         ].
)
gatherCommentBackwards ^ <String> = (
  | start <Integer> = position. |
	position - 1 > 0 ifFalse: [^false].
	(input at: position) = 41 (* ) *) ifFalse: [^''].
	(input at: position - 1) = 42 (* * *) ifFalse: [^''].
	position:: position - 2.

	[position - 1 > 0] whileTrue:
		[(* Start of comment. *)
		(input at: position) = 42 (* * *) ifTrue:
			[(input at: position - 1) = 40 (* ( *) ifTrue:
				[^input copyFrom: position + 1 to: start - 2]].

		(* Nested comment. *)
		(input at: position) = 41 (* ) *) ifTrue:
			[(input at: position - 1) = 42 (* * *) ifTrue:
				[gatherComment.
				 position:: position - 1]].

		position:: position - 1].
    
	scanError: 'Unterminated comment'
)
gatherComment ^ <String> = (
  | start <Integer> = position. |
	position + 1 <= size ifFalse: [^false].
	(input at: position) = 40 (* ( *) ifFalse: [^''].
	(input at: position + 1) = 42 (* * *) ifFalse: [^''].
	position:: position + 2.

	[position + 1 <= size] whileTrue:
		[(* End of comment. *)
		(input at: position) = 42 (* * *) ifTrue:
			[(input at: position + 1) = 41 (* ) *) ifTrue:
				[^input copyFrom: start + 2  to: position - 1]].

		(* Nested comment. *)
		(input at: position) = 40 (* ( *) ifTrue:
			[(input at: position + 1) = 42 (* * *) ifTrue:
				[skipComment.
				 position:: position - 1]].

		position:: position + 1].
    
	scanError: 'Unterminated comment'
)
) : (
)
