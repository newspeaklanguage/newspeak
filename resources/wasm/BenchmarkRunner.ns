Newspeak3
'Benchmarks'
class BenchmarkRunner packageUsing: manifest = (
(*Infrastructure to run a set of benchmarks and gather average run times.

Copyright 2012 Google Inc.
Copyright 2013 Ryan Macnak

Licensed under the Apache License, Version 2.0 (the ''License''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0*)
|
	benchmarks = {
		manifest ClosureDefFibonacci.
		manifest ClosureFibonacci.
		manifest DeltaBlue.
		manifest MethodFibonacci.
		manifest NLRImmediate.
		manifest NLRLoop.
		manifest ParserCombinators.
		manifest Richards.
		manifest SlotRead.
		manifest SlotWrite.
		manifest Splay.
	}.
|) (
class Benchmarking usingPlatform: p = (|
private Stopwatch = p kernel Stopwatch.
private List = p collections List.
private cachedPlatform = p.
|) (
measure: block forAtLeast: milliseconds = (
	| runs stopwatch elapsed score |
	runs:: 0.
	stopwatch:: Stopwatch new start.

	[block value.
	runs:: runs + 1.
	elapsed:: stopwatch elapsedMilliseconds.
	elapsed < milliseconds] whileTrue.

	score:: (round: runs * 1000 asFloat / elapsed to: 0.1 asFloat) asFloat.
	^score printString
)
public report = (
	benchmarks do:
		[:benchmark |
		| b score |
		b:: benchmark usingPlatform: cachedPlatform.
		self measure: [b bench] forAtLeast: 3.
		score:: measure: [b bench] forAtLeast: 20.
		(benchmark name, ': ', score) out].
)
round: n to: quantum = (
	^(n // quantum) * quantum
)
) : (
)
public main: p args: argv = (
	(Benchmarking usingPlatform: p) report
)
) : (
)
