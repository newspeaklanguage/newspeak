Newspeak3
'Samples'
class CodeMirrorDemo  packageUsing: manifest = (
(*An experiment integrating CodeMirror into the Newspeak UI.*)
|
JSObject <Alien>
private hopscotchRuntime = manifest HopscotchForHTML5Runtime packageUsing: manifest.
|
) (
class Demo usingPlatform: p = (
(* Describe the class in this comment. *)
|
	Subject = p hopscotch core Subject.
	Presenter = p hopscotch core Presenter.
	TextEditorFragment = p hopscotch fragments TextEditorFragment.
	CodeMirror = p js global at: 'CodeMirror'.
|
) (
class DemoPresenter onSubject: s = Presenter onSubject: s (
(* A test class for using CodeMirror in HopscotchForHTML. *)
|
editor <CodeMirrorFragment>
|
) (
public definition ^ <Fragment> = (
    editor::  codeMirror:
      'forEach: i <Integer> do: b <[String]> = (
  1 to: i do: [:j | b value].
)'.
   ^column: {
         textString: 'Below is a CodeMirror text editor:'.
         editor.
       }
)
public setupEditor = (
	editor refresh
)
public style = (
  | bloo = JSObject new. bold = JSObject new. |
   bold at: 'css' put: 'font-weight:bold'.
   bloo at: 'css' put: 'color:#0000FF; font-weight:bold'.
   editor style: bold from: 0 to: 7.
   editor style: bloo from: 11 to: 20.
   editor style: bold from: 21 to: 24.
   editor style: bloo from: 27 to: 38.
   editor refresh.
)
) : (
)
public class DemoSubject new = Subject onModel: nil (
(* Describe the class in this comment. *)
|
|
) (
public createPresenter = (
	^DemoPresenter onSubject: self
)
public setupEditor = (
	presenter setupEditor
)
public style = (
	presenter style
)
) : (
)
) : (
)
public main: platform args: args = (
	|
	hopscotchPlatform = hopscotchRuntime using: platform.
	demo <Demo> = Demo usingPlatform: hopscotchPlatform.
	demoSubject = demo DemoSubject new.
	|

	JSObject:: hopscotchPlatform js global at: 'Object'.
	hopscotchPlatform hopscotch core HopscotchWindow openSubject: demoSubject.
	demoSubject setupEditor; style.
)
) : (
)
